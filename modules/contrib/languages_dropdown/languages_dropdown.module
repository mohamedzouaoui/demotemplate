<?php

/**
 * @file
 * Provides a Languages Dropdown (Bootstrap) functionality.
 */

use Drupal\Component\Utility\NestedArray;
use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function languages_dropdown_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.languages_dropdown':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t(
        'Languages Dropdown (Bootstrap) provides a language switcher dropdown
        integrating the @bootstrap library.',
        [
          '@bootstrap' => 'https://github.com/usrz/bootstrap-languages',
        ]
      ) . '</p>';
      $output .= '<h3>' . t('How to use') . '</h3>';
      $output .= '<p>' . t(
        'Add as normal Block using Block Layout UI and place to the desired
        region.'
      ) . '</p>';

      return $output;
  }

}

/**
 * Implements hook_theme().
 */
function languages_dropdown_theme($existing, $type, $theme, $path) {
  return [
    'links__lang_drop_bootstrap_block' => [
      'base hook' => 'links',
    ],
    'lang_drop_bootstrap_block' => [
      'variables' => [
        'languages' => NULL,
        'size' => NULL,
        'icon_only' => NULL,
        'current_language' => NULL,
        'set_active_class' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_page_attachments().
 */
function languages_dropdown_page_attachments(&$attachments) {
  $theme = \Drupal::theme()->getActiveTheme();
  $base_themes = array_keys(
    \Drupal::theme()->getActiveTheme()->getBaseThemeExtensions()
  );

  // Adds bootstrap js & css dependency to the page if this is not added from
  // bootstrap theme.
  if ($theme->getName() !== 'bootstrap') {
    if (in_array('bootstrap', $base_themes)) {
      $attachments['#attached']['library'][] =
        'languages_dropdown/dependency-js';
    }
    else {
      $attachments['#attached']['library'][] =
        'languages_dropdown/dependency-css';
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Preprocess for links--bootstrap-language-block.html.twig.
 */
function languages_dropdown_preprocess_links__lang_drop_bootstrap_block(
  &$variables) {

  $variables['languages'] = [];
  $variables['current_language'] = \Drupal::languageManager()
    ->getCurrentLanguage()
    ->getId();

  $theme_name = \Drupal::theme()->getActiveTheme()->getName();
  $base_themes = array_keys(
    \Drupal::theme()->getActiveTheme()->getBaseThemeExtensions()
  );

  $variables['is_bootstrap'] = (
    $theme_name === 'bootstrap' ||
    in_array('bootstrap', $base_themes)
  ) ? TRUE : FALSE;

  foreach ($variables['links'] as $lang_key => $link) {
    /** @var \Drupal\Core\Url $url */
    $url = $link['link']['#url'];

    if ($url instanceof Url) {
      $url_options = NestedArray::mergeDeep(
        $url->getOptions(),
        $link['link']['#options']
      );

      $variables['languages'][$lang_key] = $url->setOptions($url_options);
    }
  }
}
